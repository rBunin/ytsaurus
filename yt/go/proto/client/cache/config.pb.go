// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.0
// source: yt/yt_proto/yt/client/cache/proto/config.proto

package cache

import (
	_ "go.ytsaurus.tech/yt/go/proto/core/yson"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ECompressionCodec int32

const (
	ECompressionCodec_None ECompressionCodec = 0
	ECompressionCodec_Lz4  ECompressionCodec = 1
)

// Enum value maps for ECompressionCodec.
var (
	ECompressionCodec_name = map[int32]string{
		0: "None",
		1: "Lz4",
	}
	ECompressionCodec_value = map[string]int32{
		"None": 0,
		"Lz4":  1,
	}
)

func (x ECompressionCodec) Enum() *ECompressionCodec {
	p := new(ECompressionCodec)
	*p = x
	return p
}

func (x ECompressionCodec) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ECompressionCodec) Descriptor() protoreflect.EnumDescriptor {
	return file_yt_yt_proto_yt_client_cache_proto_config_proto_enumTypes[0].Descriptor()
}

func (ECompressionCodec) Type() protoreflect.EnumType {
	return &file_yt_yt_proto_yt_client_cache_proto_config_proto_enumTypes[0]
}

func (x ECompressionCodec) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ECompressionCodec) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ECompressionCodec(num)
	return nil
}

// Deprecated: Use ECompressionCodec.Descriptor instead.
func (ECompressionCodec) EnumDescriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_cache_proto_config_proto_rawDescGZIP(), []int{0}
}

// Connection options.
type TConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName                         *string `protobuf:"bytes,1,opt,name=ClusterName" json:"ClusterName,omitempty"`
	ProxyRole                           *string `protobuf:"bytes,2,opt,name=ProxyRole" json:"ProxyRole,omitempty"`
	ChannelPoolSize                     *uint32 `protobuf:"varint,3,opt,name=ChannelPoolSize" json:"ChannelPoolSize,omitempty"`
	ChannelPoolRebalanceIntervalSeconds *uint32 `protobuf:"varint,4,opt,name=ChannelPoolRebalanceIntervalSeconds" json:"ChannelPoolRebalanceIntervalSeconds,omitempty"`
	// All timeouts in milliseconds.
	DefaultTransactionTimeout    *uint32            `protobuf:"varint,5,opt,name=DefaultTransactionTimeout" json:"DefaultTransactionTimeout,omitempty"`
	DefaultSelectRowsTimeout     *uint32            `protobuf:"varint,6,opt,name=DefaultSelectRowsTimeout" json:"DefaultSelectRowsTimeout,omitempty"`
	DefaultLookupRowsTimeout     *uint32            `protobuf:"varint,7,opt,name=DefaultLookupRowsTimeout" json:"DefaultLookupRowsTimeout,omitempty"`
	DefaultTotalStreamingTimeout *uint32            `protobuf:"varint,8,opt,name=DefaultTotalStreamingTimeout" json:"DefaultTotalStreamingTimeout,omitempty"`
	DefaultStreamingStallTimeout *uint32            `protobuf:"varint,9,opt,name=DefaultStreamingStallTimeout" json:"DefaultStreamingStallTimeout,omitempty"`
	DefaultPingPeriod            *uint32            `protobuf:"varint,10,opt,name=DefaultPingPeriod" json:"DefaultPingPeriod,omitempty"`
	ModifyRowsBatchCapacity      *uint32            `protobuf:"varint,11,opt,name=ModifyRowsBatchCapacity" json:"ModifyRowsBatchCapacity,omitempty"`
	RequestCodec                 *ECompressionCodec `protobuf:"varint,17,opt,name=RequestCodec,enum=NYT.NClient.NCache.ECompressionCodec,def=0" json:"RequestCodec,omitempty"`
	ResponseCodec                *ECompressionCodec `protobuf:"varint,12,opt,name=ResponseCodec,enum=NYT.NClient.NCache.ECompressionCodec,def=0" json:"ResponseCodec,omitempty"`
	// Should set EnableLegacyRpcCodecs=False, to enable RequestCodec & ResponseCodec: https://nda.ya.ru/t/iXCfYZjS6yNEwg
	EnableLegacyRpcCodecs           *bool    `protobuf:"varint,20,opt,name=EnableLegacyRpcCodecs" json:"EnableLegacyRpcCodecs,omitempty"`
	EnableRetries                   *bool    `protobuf:"varint,13,opt,name=EnableRetries" json:"EnableRetries,omitempty"`
	RetryBackoffTime                *uint32  `protobuf:"varint,14,opt,name=RetryBackoffTime" json:"RetryBackoffTime,omitempty"`
	RetryAttempts                   *uint32  `protobuf:"varint,15,opt,name=RetryAttempts" json:"RetryAttempts,omitempty"`
	RetryTimeout                    *uint32  `protobuf:"varint,16,opt,name=RetryTimeout" json:"RetryTimeout,omitempty"`
	ProxyAddresses                  []string `protobuf:"bytes,18,rep,name=ProxyAddresses" json:"ProxyAddresses,omitempty"`
	EnableProxyDiscovery            *bool    `protobuf:"varint,19,opt,name=EnableProxyDiscovery" json:"EnableProxyDiscovery,omitempty"`
	EnablePowerOfTwoChoicesStrategy *bool    `protobuf:"varint,21,opt,name=EnablePowerOfTwoChoicesStrategy" json:"EnablePowerOfTwoChoicesStrategy,omitempty"`
	EnableSelectQueryTracingTag     *bool    `protobuf:"varint,22,opt,name=EnableSelectQueryTracingTag" json:"EnableSelectQueryTracingTag,omitempty"`
	ClusterTag                      *uint32  `protobuf:"varint,23,opt,name=ClusterTag" json:"ClusterTag,omitempty"`
	ClockClusterTag                 *uint32  `protobuf:"varint,24,opt,name=ClockClusterTag" json:"ClockClusterTag,omitempty"`
	UdfRegistryPath                 *string  `protobuf:"bytes,25,opt,name=UdfRegistryPath" json:"UdfRegistryPath,omitempty"`
}

// Default values for TConfig fields.
const (
	Default_TConfig_RequestCodec  = ECompressionCodec_None
	Default_TConfig_ResponseCodec = ECompressionCodec_None
)

func (x *TConfig) Reset() {
	*x = TConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_cache_proto_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TConfig) ProtoMessage() {}

func (x *TConfig) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_cache_proto_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TConfig.ProtoReflect.Descriptor instead.
func (*TConfig) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_cache_proto_config_proto_rawDescGZIP(), []int{0}
}

func (x *TConfig) GetClusterName() string {
	if x != nil && x.ClusterName != nil {
		return *x.ClusterName
	}
	return ""
}

func (x *TConfig) GetProxyRole() string {
	if x != nil && x.ProxyRole != nil {
		return *x.ProxyRole
	}
	return ""
}

func (x *TConfig) GetChannelPoolSize() uint32 {
	if x != nil && x.ChannelPoolSize != nil {
		return *x.ChannelPoolSize
	}
	return 0
}

func (x *TConfig) GetChannelPoolRebalanceIntervalSeconds() uint32 {
	if x != nil && x.ChannelPoolRebalanceIntervalSeconds != nil {
		return *x.ChannelPoolRebalanceIntervalSeconds
	}
	return 0
}

func (x *TConfig) GetDefaultTransactionTimeout() uint32 {
	if x != nil && x.DefaultTransactionTimeout != nil {
		return *x.DefaultTransactionTimeout
	}
	return 0
}

func (x *TConfig) GetDefaultSelectRowsTimeout() uint32 {
	if x != nil && x.DefaultSelectRowsTimeout != nil {
		return *x.DefaultSelectRowsTimeout
	}
	return 0
}

func (x *TConfig) GetDefaultLookupRowsTimeout() uint32 {
	if x != nil && x.DefaultLookupRowsTimeout != nil {
		return *x.DefaultLookupRowsTimeout
	}
	return 0
}

func (x *TConfig) GetDefaultTotalStreamingTimeout() uint32 {
	if x != nil && x.DefaultTotalStreamingTimeout != nil {
		return *x.DefaultTotalStreamingTimeout
	}
	return 0
}

func (x *TConfig) GetDefaultStreamingStallTimeout() uint32 {
	if x != nil && x.DefaultStreamingStallTimeout != nil {
		return *x.DefaultStreamingStallTimeout
	}
	return 0
}

func (x *TConfig) GetDefaultPingPeriod() uint32 {
	if x != nil && x.DefaultPingPeriod != nil {
		return *x.DefaultPingPeriod
	}
	return 0
}

func (x *TConfig) GetModifyRowsBatchCapacity() uint32 {
	if x != nil && x.ModifyRowsBatchCapacity != nil {
		return *x.ModifyRowsBatchCapacity
	}
	return 0
}

func (x *TConfig) GetRequestCodec() ECompressionCodec {
	if x != nil && x.RequestCodec != nil {
		return *x.RequestCodec
	}
	return Default_TConfig_RequestCodec
}

func (x *TConfig) GetResponseCodec() ECompressionCodec {
	if x != nil && x.ResponseCodec != nil {
		return *x.ResponseCodec
	}
	return Default_TConfig_ResponseCodec
}

func (x *TConfig) GetEnableLegacyRpcCodecs() bool {
	if x != nil && x.EnableLegacyRpcCodecs != nil {
		return *x.EnableLegacyRpcCodecs
	}
	return false
}

func (x *TConfig) GetEnableRetries() bool {
	if x != nil && x.EnableRetries != nil {
		return *x.EnableRetries
	}
	return false
}

func (x *TConfig) GetRetryBackoffTime() uint32 {
	if x != nil && x.RetryBackoffTime != nil {
		return *x.RetryBackoffTime
	}
	return 0
}

func (x *TConfig) GetRetryAttempts() uint32 {
	if x != nil && x.RetryAttempts != nil {
		return *x.RetryAttempts
	}
	return 0
}

func (x *TConfig) GetRetryTimeout() uint32 {
	if x != nil && x.RetryTimeout != nil {
		return *x.RetryTimeout
	}
	return 0
}

func (x *TConfig) GetProxyAddresses() []string {
	if x != nil {
		return x.ProxyAddresses
	}
	return nil
}

func (x *TConfig) GetEnableProxyDiscovery() bool {
	if x != nil && x.EnableProxyDiscovery != nil {
		return *x.EnableProxyDiscovery
	}
	return false
}

func (x *TConfig) GetEnablePowerOfTwoChoicesStrategy() bool {
	if x != nil && x.EnablePowerOfTwoChoicesStrategy != nil {
		return *x.EnablePowerOfTwoChoicesStrategy
	}
	return false
}

func (x *TConfig) GetEnableSelectQueryTracingTag() bool {
	if x != nil && x.EnableSelectQueryTracingTag != nil {
		return *x.EnableSelectQueryTracingTag
	}
	return false
}

func (x *TConfig) GetClusterTag() uint32 {
	if x != nil && x.ClusterTag != nil {
		return *x.ClusterTag
	}
	return 0
}

func (x *TConfig) GetClockClusterTag() uint32 {
	if x != nil && x.ClockClusterTag != nil {
		return *x.ClockClusterTag
	}
	return 0
}

func (x *TConfig) GetUdfRegistryPath() string {
	if x != nil && x.UdfRegistryPath != nil {
		return *x.UdfRegistryPath
	}
	return ""
}

type TClustersConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DefaultConfig is used for clusters not mentioned in ClusterConfigs.
	DefaultConfig *TConfig `protobuf:"bytes,1,opt,name=DefaultConfig" json:"DefaultConfig,omitempty"`
	// Per-cluster configs.
	ClusterConfigs map[string]*TConfig `protobuf:"bytes,2,rep,name=ClusterConfigs" json:"ClusterConfigs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (x *TClustersConfig) Reset() {
	*x = TClustersConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yt_yt_proto_yt_client_cache_proto_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TClustersConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TClustersConfig) ProtoMessage() {}

func (x *TClustersConfig) ProtoReflect() protoreflect.Message {
	mi := &file_yt_yt_proto_yt_client_cache_proto_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TClustersConfig.ProtoReflect.Descriptor instead.
func (*TClustersConfig) Descriptor() ([]byte, []int) {
	return file_yt_yt_proto_yt_client_cache_proto_config_proto_rawDescGZIP(), []int{1}
}

func (x *TClustersConfig) GetDefaultConfig() *TConfig {
	if x != nil {
		return x.DefaultConfig
	}
	return nil
}

func (x *TClustersConfig) GetClusterConfigs() map[string]*TConfig {
	if x != nil {
		return x.ClusterConfigs
	}
	return nil
}

var File_yt_yt_proto_yt_client_cache_proto_config_proto protoreflect.FileDescriptor

var file_yt_yt_proto_yt_client_cache_proto_config_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x79, 0x74, 0x2f, 0x79, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x74,
	0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x12, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x1a, 0x32, 0x79, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79,
	0x74, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x79, 0x73, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x0a, 0x0a, 0x07, 0x54, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52,
	0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50,
	0x6f, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x50,
	0x0a, 0x23, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x23, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x12, 0x3c, 0x0a, 0x19, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x19, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x3a,
	0x0a, 0x18, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52,
	0x6f, 0x77, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x18, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52,
	0x6f, 0x77, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x6f, 0x77, 0x73, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x6f, 0x77, 0x73, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x42, 0x0a, 0x1c, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1c, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x42, 0x0a, 0x1c, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x1c, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x2c,
	0x0a, 0x11, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x38, 0x0a, 0x17,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x6f, 0x77, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x6f, 0x77, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x4f, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x4e,
	0x59, 0x54, 0x2e, 0x4e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x2e, 0x45, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x63, 0x3a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x52, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x51, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x2e, 0x45, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x63, 0x3a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x52, 0x0d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x34, 0x0a, 0x15, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x52, 0x70, 0x63, 0x43, 0x6f, 0x64,
	0x65, 0x63, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x52, 0x70, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x74, 0x72, 0x79, 0x42,
	0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x52, 0x65, 0x74, 0x72, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x52, 0x65, 0x74, 0x72, 0x79,
	0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x74, 0x72,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x52, 0x65, 0x74, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x12,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x14, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x12, 0x48, 0x0a, 0x1f, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x66, 0x54, 0x77, 0x6f, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x73, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x66,
	0x54, 0x77, 0x6f, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x12, 0x40, 0x0a, 0x1b, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x54, 0x61,
	0x67, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61, 0x63, 0x69, 0x6e,
	0x67, 0x54, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54,
	0x61, 0x67, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x54, 0x61, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x54, 0x61, 0x67, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x43,
	0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x61, 0x67, 0x12, 0x28,
	0x0a, 0x0f, 0x55, 0x64, 0x66, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x55, 0x64, 0x66, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x50, 0x61, 0x74, 0x68, 0x22, 0x9b, 0x02, 0x0a, 0x0f, 0x54, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x41, 0x0a, 0x0d,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x4e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x0d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x65, 0x0a, 0x0e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x54, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x42, 0x04, 0xd0, 0xbb, 0x01, 0x01, 0x52, 0x0e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x1a, 0x5e, 0x0a, 0x13, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x4e, 0x59, 0x54, 0x2e, 0x4e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x26, 0x0a, 0x11, 0x45, 0x43, 0x6f, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x7a, 0x34, 0x10, 0x01, 0x42, 0x2f,
	0xc0, 0xbb, 0x01, 0x01, 0x5a, 0x29, 0x61, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x74,
	0x65, 0x61, 0x6d, 0x2e, 0x72, 0x75, 0x2f, 0x79, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x61, 0x63, 0x68, 0x65,
}

var (
	file_yt_yt_proto_yt_client_cache_proto_config_proto_rawDescOnce sync.Once
	file_yt_yt_proto_yt_client_cache_proto_config_proto_rawDescData = file_yt_yt_proto_yt_client_cache_proto_config_proto_rawDesc
)

func file_yt_yt_proto_yt_client_cache_proto_config_proto_rawDescGZIP() []byte {
	file_yt_yt_proto_yt_client_cache_proto_config_proto_rawDescOnce.Do(func() {
		file_yt_yt_proto_yt_client_cache_proto_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_yt_yt_proto_yt_client_cache_proto_config_proto_rawDescData)
	})
	return file_yt_yt_proto_yt_client_cache_proto_config_proto_rawDescData
}

var file_yt_yt_proto_yt_client_cache_proto_config_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yt_yt_proto_yt_client_cache_proto_config_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_yt_yt_proto_yt_client_cache_proto_config_proto_goTypes = []interface{}{
	(ECompressionCodec)(0),  // 0: NYT.NClient.NCache.ECompressionCodec
	(*TConfig)(nil),         // 1: NYT.NClient.NCache.TConfig
	(*TClustersConfig)(nil), // 2: NYT.NClient.NCache.TClustersConfig
	nil,                     // 3: NYT.NClient.NCache.TClustersConfig.ClusterConfigsEntry
}
var file_yt_yt_proto_yt_client_cache_proto_config_proto_depIdxs = []int32{
	0, // 0: NYT.NClient.NCache.TConfig.RequestCodec:type_name -> NYT.NClient.NCache.ECompressionCodec
	0, // 1: NYT.NClient.NCache.TConfig.ResponseCodec:type_name -> NYT.NClient.NCache.ECompressionCodec
	1, // 2: NYT.NClient.NCache.TClustersConfig.DefaultConfig:type_name -> NYT.NClient.NCache.TConfig
	3, // 3: NYT.NClient.NCache.TClustersConfig.ClusterConfigs:type_name -> NYT.NClient.NCache.TClustersConfig.ClusterConfigsEntry
	1, // 4: NYT.NClient.NCache.TClustersConfig.ClusterConfigsEntry.value:type_name -> NYT.NClient.NCache.TConfig
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_yt_yt_proto_yt_client_cache_proto_config_proto_init() }
func file_yt_yt_proto_yt_client_cache_proto_config_proto_init() {
	if File_yt_yt_proto_yt_client_cache_proto_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yt_yt_proto_yt_client_cache_proto_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yt_yt_proto_yt_client_cache_proto_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TClustersConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yt_yt_proto_yt_client_cache_proto_config_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yt_yt_proto_yt_client_cache_proto_config_proto_goTypes,
		DependencyIndexes: file_yt_yt_proto_yt_client_cache_proto_config_proto_depIdxs,
		EnumInfos:         file_yt_yt_proto_yt_client_cache_proto_config_proto_enumTypes,
		MessageInfos:      file_yt_yt_proto_yt_client_cache_proto_config_proto_msgTypes,
	}.Build()
	File_yt_yt_proto_yt_client_cache_proto_config_proto = out.File
	file_yt_yt_proto_yt_client_cache_proto_config_proto_rawDesc = nil
	file_yt_yt_proto_yt_client_cache_proto_config_proto_goTypes = nil
	file_yt_yt_proto_yt_client_cache_proto_config_proto_depIdxs = nil
}
