
# This file was generated by the build system used internally in the Yandex monorepo.
# Only simple modifications are allowed (adding source-files to targets, adding simple properties
# like target_include_directories). These modifications will be ported to original
# ya.make files by maintainers. Any complex modifications which can't be ported back to the
# original buildsystem will not be accepted.



add_library(lib-Transforms-Instrumentation)
target_compile_options(lib-Transforms-Instrumentation PRIVATE
  $<IF:$<CXX_COMPILER_ID:MSVC>,,-Wno-everything>
)
target_include_directories(lib-Transforms-Instrumentation PRIVATE
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Transforms/Instrumentation
)
target_link_libraries(lib-Transforms-Instrumentation PUBLIC
  contrib-libs-linux-headers
  contrib-libs-cxxsupp
  contrib-libs-llvm16
  libs-llvm16-include
  llvm16-lib-Analysis
  llvm16-lib-Demangle
  llvm16-lib-IR
  llvm16-lib-MC
  llvm16-lib-ProfileData
  llvm16-lib-Support
  llvm16-lib-TargetParser
  lib-Transforms-Utils
)
target_sources(lib-Transforms-Instrumentation PRIVATE
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Transforms/Instrumentation/AddressSanitizer.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Transforms/Instrumentation/BoundsChecking.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Transforms/Instrumentation/CGProfile.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Transforms/Instrumentation/ControlHeightReduction.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Transforms/Instrumentation/GCOVProfiling.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Transforms/Instrumentation/HWAddressSanitizer.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Transforms/Instrumentation/IndirectCallPromotion.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Transforms/Instrumentation/InstrOrderFile.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Transforms/Instrumentation/InstrProfiling.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Transforms/Instrumentation/Instrumentation.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Transforms/Instrumentation/KCFI.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Transforms/Instrumentation/MemProfiler.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Transforms/Instrumentation/MemorySanitizer.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Transforms/Instrumentation/PGOInstrumentation.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Transforms/Instrumentation/PGOMemOPSizeOpt.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Transforms/Instrumentation/PoisonChecking.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Transforms/Instrumentation/SanitizerBinaryMetadata.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Transforms/Instrumentation/SanitizerCoverage.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Transforms/Instrumentation/ThreadSanitizer.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Transforms/Instrumentation/ValueProfileCollector.cpp
)
